<application>
  <component name="AppStorage">
    <option name="maxHistorySize" value="30" />
    <histories>
      <item value="Successive activations of this method examine objects in sequence, * cycling through objects in oldest-to-youngest order." />
      <item value="oname" />
      <item value="Eviction Policy" />
      <item value="This method is invoked only by Java code; when the garbage collector clears references it does so directly, without invoking this method." />
      <item value="Timestamp clock, updated by the garbage collector" />
      <item value="Timestamp updated by each invocation of the get method. The VM may use * this field when selecting soft references to be cleared, but it is not * required to do so." />
      <item value="If this reference object has * been cleared, either by the program or by the garbage collector, then * this method returns &lt;code&gt;null&lt;/code&gt;." />
      <item value="Allocates the object." />
      <item value="Do not register with the queue" />
      <item value="Count of instances that have been checkout out to pool clients" />
      <item value="Total number of instances that have been destroyed" />
      <item value="Soft Reference Object Pool" />
      <item value="clear strong reference" />
      <item value="Removes the next reference object in this queue, blocking until one becomes available." />
      <item value="enqueue" />
      <item value="Reference queues, to which registered reference objects are appended by the garbage collector after the appropriate reachability changes are detected. Since: 1.2" />
      <item value="Reference queues, to which registered reference objects are appended by the garbage collector after the appropriate reachability changes are detected.&#10;Since:&#10;1.2" />
      <item value="Queue of broken references that might be able to be removed from * &lt;code&gt;_pool&lt;/code&gt;. This is used to help {@link #getNumIdle()} be more * accurate with minimal performance overhead." />
      <item value="Not supported in this base implementation." />
      <item value="This may be * considered an approximation of the number of objects that can be * {@link #borrowObject borrowed} without creating any new instances." />
      <item value="Return the number of instances currently idle in this pool." />
      <item value="get Num Idle" />
      <item value="borrow Object" />
      <item value="do nothing by default, needed for b/w compatibility." />
      <item value="Abandoned Config" />
      <item value="Configuration settings for abandoned object removal." />
      <item value="LUCENE" />
      <item value="fully Populated Subject" />
      <item value="* Processes a method invocation on a proxy instance and returns * the result. This method will be invoked on an invocation handler * when a method is invoked on a proxy instance that it is * associated with." />
      <item value="Invocation Handler" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="164" />
        <entry key="ENGLISH" value="165" />
        <entry key="ALBANIAN" value="1" />
        <entry key="DANISH" value="2" />
        <entry key="LUXEMBOURGISH" value="2" />
        <entry key="SUNDANESE" value="3" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="5c565298cc6d41a2" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>