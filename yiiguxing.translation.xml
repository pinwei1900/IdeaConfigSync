<application>
  <component name="AppStorage">
    <option name="maxHistorySize" value="30" />
    <histories>
      <item value="discarded" />
      <item value="Receiver Start Event" />
      <item value="Signals that an I/O exception of some sort has occurred. This class is the general class of exceptions produced by failed or interrupted I/O operations." />
      <item value="The SMPP command ID of the packet type to return." />
      <item value="BOUND" />
      <item value="UNBINDING" />
      <item value="BINDING" />
      <item value="UNBOUND" />
      <item value="* Transfer data between the SC and an ESME. This message type is used to * transfer data both by the SMSC and the ESME. The command can be used as a * replacement for both submit_sm and deliver_sm." />
      <item value="Submit to multiple destinations response." />
      <item value="* Deliver message. This message is sent from the SMSC to a Receiver ESME to * deliver a short message. It is also used to notify an ESME that submitted a * message using registered delivery that a message has reached it's end point * successfully." />
      <item value="Exception In Initializer Error" />
      <item value="This stress client is an example of submit bulk messages asynchronously." />
      <item value="7050" />
      <item value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;&lt;returnsms&gt; &lt;statusbox&gt; &lt;mobile&gt;13655669865&lt;/mobile&gt; &lt;taskid&gt;344020&lt;/taskid&gt; &lt;status&gt;10&lt;/status&gt; &lt;receivetime&gt;2019-01-03 17:35:01&lt;/receivetime&gt; &lt;errorcode&gt;&lt;![CDATA[DELIVRD]]&gt;&lt;/errorcode&gt; &lt;extno&gt;&lt;![CDATA[227]]&gt;&lt;/extno&gt; &lt;/statusbox&gt; &lt;statusbox&gt; &lt;mobile&gt;13655669865&lt;/mobile&gt; &lt;taskid&gt;344021&lt;/taskid&gt; &lt;status&gt;10&lt;/status&gt; &lt;receivetime&gt;2019-01-03 17:35:01&lt;/receivetime&gt; &lt;errorcode&gt;&lt;![CDATA[DELIVRD]]&gt;&lt;/errorcode&gt; &lt;extno&gt;&lt;![CDATA[227]]&gt;&lt;/extno&gt; &lt;/statusbox&gt; &lt;statusbox&gt; &lt;mobile&gt;13655669865&lt;/mobile&gt; &lt;taskid&gt;344022&lt;/taskid&gt; &lt;status&gt;10&lt;/status&gt; &lt;receivetime&gt;2019-01-03 17:35:01&lt;/receivetime&gt; &lt;errorcode&gt;&lt;![CDATA[DELIVRD]]&gt;&lt;/errorcode&gt; &lt;extno&gt;&lt;![CDATA[227]]&gt;&lt;/extno&gt; &lt;/statusbox&gt; &lt;statusbox&gt; &lt;mobile&gt;13655669865&lt;/mobile&gt; &lt;taskid&gt;344023&lt;/taskid&gt; &lt;status&gt;10&lt;/status&gt; &lt;receivetime&gt;2019-01-03 17:36:01&lt;/receivetime&gt; &lt;errorcode&gt;&lt;![CDATA[DELIVRD]]&gt;&lt;/errorcode&gt; &lt;extno&gt;&lt;![CDATA[227]]&gt;&lt;/extno&gt; &lt;/statusbox&gt; &lt;statusbox&gt; &lt;mobile&gt;13160876967&lt;/mobile&gt; &lt;taskid&gt;344024&lt;/taskid&gt; &lt;status&gt;10&lt;/status&gt; &lt;receivetime&gt;2019-01-03 17:41:05&lt;/receivetime&gt; &lt;errorcode&gt;&lt;![CDATA[0:0]]&gt;&lt;/errorcode&gt; &lt;extno&gt;&lt;![CDATA[227]]&gt;&lt;/extno&gt; &lt;/statusbox&gt; &lt;/returnsms&gt;" />
      <item value="A dynamic version of the {@link ngTable ngTable} directive that accepts a dynamic list of columns * definitions to render" />
      <item value="This allows the $columns array to be accessed outside of the html table markup" />
      <item value="create Event Subscription Fn" />
      <item value="raised when a new pages array has been generated" />
      <item value="raised when `settings` receives a new data array" />
      <item value="raised when the `reload` event has finished loading new data" />
      <item value="raised when a new instance of `NgTableParams` has finished being constructed" />
      <item value="validateMapping err" />
      <item value="validate Mapping" />
      <item value="if any thread interrupted the current thread before or while the current thread was waiting for a notification. The interrupted status of the current thread is cleared when this exception is thrown." />
      <item value="Channel Duplex Handler" />
      <item value="jianghang" />
      <item value="tradition" />
      <item value="Convenient superclass for application objects that want to be aware of the application context, e.g. for custom lookup of collaborating beans or for context-specific resource access. It saves the application context reference and provides an initialization callback method. Furthermore, it offers numerous convenience methods for message lookup.&#10;There is no requirement to subclass this class: It just makes things a little easier if you need access to the context, e.g. for access to file resources or to the message source. Note that many application objects do not need to be aware of the application context at all, as they can receive collaborating beans via bean references." />
      <item value="Load previously stored messages." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="231" />
        <entry key="ENGLISH" value="232" />
        <entry key="ALBANIAN" value="1" />
        <entry key="DANISH" value="2" />
        <entry key="LUXEMBOURGISH" value="2" />
        <entry key="SUNDANESE" value="3" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="5c565298cc6d41a2" />
      </youdao-translate>
    </option>
  </component>
</application>