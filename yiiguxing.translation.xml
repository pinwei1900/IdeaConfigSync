<application>
  <component name="AppStorage">
    <option name="maxHistorySize" value="30" />
    <histories>
      <item value="saturated" />
      <item value="Executes the given task sometime in the future. The task may execute in a new thread or in an existing pooled thread. If the task cannot be submitted for execution, either because this executor has been shutdown or because its capacity has been reached, the task is handled by the current RejectedExecutionHandler." />
      <item value="If a task can be successfully queued, then we still need * to double-check whether we should have added a thread * (because existing ones died since last checking) or that * the pool shut down since entry into this method. So we * recheck state and if necessary roll back the enqueuing if * stopped, or start a new thread if there are none." />
      <item value="If fewer than corePoolSize threads are running, try to * start a new thread with the given command as its first * task. The call to addWorker atomically checks runState and * workerCount, and so prevents false alarms that would add * threads when it shouldn't, by returning false." />
      <item value="The default rejected execution handler" />
      <item value="the handler to use when execution is blocked * because the thread bounds and queue capacities are reached" />
      <item value="the queue to use for holding tasks before they are * executed. This queue will hold only the {@code Runnable} * tasks submitted by the {@code execute} method." />
      <item value="when the number of threads is greater than * the core, this is the maximum time that excess idle threads * will wait for new tasks before terminating." />
      <item value="the number of threads to keep in the pool, even * if they are idle, unless {@code allowCoreThreadTimeOut} is set" />
      <item value="FutureTask extension to enqueue upon completion" />
      <item value="Access Control Context" />
      <item value="the AccessControlContext to inherit, or * AccessController.getContext() if null" />
      <item value="For autonumbering anonymous threads" />
      <item value="Make sure registerNatives is the first thing &lt;clinit&gt; does" />
      <item value="The requested stack size for this thread, or 0 if the creator did * not specify a stack size. It is up to the VM to do whatever it * likes with this number; some VMs will ignore it." />
      <item value="Stash the specified stack size in case the VM cares" />
      <item value="MODIFY THREADGROUP PERMISSION" />
      <item value="the desired stack size for the new thread, or zero to indicate * that this parameter is to be ignored." />
      <item value="The stack size * is the approximate number of bytes of address space that the virtual * machine is to allocate for this thread's stack." />
      <item value="Stash the specified stack size in case the VM cares */" />
      <item value="the desired stack size for the new thread, or zero to indicate that this parameter is to be ignored." />
      <item value="Thread factory capturing access control context and class loader" />
      <item value="Privileged Thread Factory" />
      <item value="Cannot instantiate." />
      <item value="A wrapper class that exposes only the ScheduledExecutorService * methods of a ScheduledExecutorService implementation." />
      <item value="Finalizable Delegated Executor Service" />
      <item value="A wrapper class that exposes only the ExecutorService methods * of an ExecutorService implementation." />
      <item value="Delegated Executor Service" />
      <item value="new Work Stealing Pool" />
      <item value="the main mechanics of invokeAny." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="89" />
        <entry key="ENGLISH" value="90" />
        <entry key="ALBANIAN" value="1" />
        <entry key="DANISH" value="1" />
        <entry key="LUXEMBOURGISH" value="2" />
        <entry key="SUNDANESE" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="5c565298cc6d41a2" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>