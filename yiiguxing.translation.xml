<application>
  <component name="AppStorage">
    <option name="maxHistorySize" value="30" />
    <histories>
      <item value="Increments modCount" />
      <item value="Increases the capacity to ensure that it can hold at least the * number of elements specified by the minimum capacity argument." />
      <item value="Some VMs reserve some header words in an array. * Attempts to allocate larger arrays may result in * OutOfMemoryError: Requested array size exceeds VM limit" />
      <item value="overflow-conscious code" />
      <item value="larger than default for default empty table. It's already // supposed to be at default size." />
      <item value="any size if not default element table" />
      <item value="Increases the capacity of this ArrayList instance, if necessary, to ensure that it can hold at least the number of elements specified by the minimum capacity argument." />
      <item value="ensure Capacity" />
      <item value="Trims the capacity of this &lt;tt&gt;ArrayList&lt;/tt&gt; instance to be the * list's current size. An application can use this operation to minimize * the storage of an &lt;tt&gt;ArrayList&lt;/tt&gt; instance." />
      <item value="trim To Size" />
      <item value="Methods for unpacking primitive values from byte arrays starting at * given offsets." />
      <item value="Constructs a {@code BootstrapMethodError} with the specified * detail message." />
      <item value="Constructs a {@code BootstrapMethodError} with no detail message." />
      <item value="Thrown to indicate that an {@code invokedynamic} instruction has" />
      <item value="Thrown to indicate that an invokedynamic instruction has failed to find its bootstrap method, or the bootstrap method has failed to provide a call site with a target of the correct method type." />
      <item value="Increases the capacity to ensure that it can hold at least the number of elements specified by the minimum capacity argument." />
      <item value="minCapacity is usually close to size, so this is a win:" />
      <item value="Performs this operation on the given arguments." />
      <item value="Bi Consumer" />
      <item value="intermediate operation" />
      <item value="an unordered stream" />
      <item value="a parallel stream" />
      <item value="a sequential stream" />
      <item value="Returns an equivalent stream that is sequential. May return * itself, either because the stream was already sequential, or because * the underlying stream state was modified to be sequential." />
      <item value="sequential" />
      <item value="a stream with a handler that is run if the stream is closed" />
      <item value="Returns an equivalent stream with an additional close handler." />
      <item value="unordered" />
      <item value="Returns a spliterator for the elements of this stream." />
      <item value="Links e as last element." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="70" />
        <entry key="ENGLISH" value="71" />
        <entry key="DANISH" value="1" />
        <entry key="JAPANESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="5c565298cc6d41a2" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>