<application>
  <component name="AppStorage">
    <option name="lastSourceLanguage" value="AUTO" />
    <option name="lastTargetLanguage" value="AUTO" />
    <option name="maxHistorySize" value="30" />
    <histories>
      <item value="The presence of this annotation on a type indicates that the type may be used with the &lt;a * href=&quot;http://code.google.com/webtoolkit/&quot;&gt;Google Web Toolkit&lt;/a&gt; (GWT). When applied to a method, * the return type of the method is GWT compatible. It's useful to indicate that an instance created * by factory methods has a GWT serializable type. In the following example," />
      <item value="Prints an Object and then terminate the line. This method calls at first String.valueOf(x) to get the printed object's string value, then behaves as though it invokes print(String) and then println(). Parameters:" />
      <item value="REJECTED" />
      <item value="REPORT DENY" />
      <item value="INSUFFICIENT BALANCE" />
      <item value="ALL FRAME BIZFORM LENGTH" />
      <item value="AUDIT DOES NOT PASS" />
      <item value="INNER END FLAG" />
      <item value="assemble Number Detail Vos" />
      <item value="Comma-separated list of active profiles. Can be overridden by a command line switch." />
      <item value="prematurely" />
      <item value="Retrieves a named file from the server and writes it to the given * OutputStream. This method does NOT close the given OutputStream. * If the current file type is ASCII, line separators in the file are * converted to the local representation." />
      <item value="config.properties (系统找不到指定的文件。)" />
      <item value="indication" />
      <item value="enter Local Passive Mode" />
      <item value="obtained" />
      <item value="download" />
      <item value="tear Down" />
      <item value="后缀" />
      <item value="前缀" />
      <item value="Unable to create Channel from class interface io.netty.channel.socket.SocketChannel" />
      <item value="// Close the connection if the connection attempt has failed." />
      <item value="// connection complete start to read first data" />
      <item value="therefore" />
      <item value="volatile" />
      <item value="// As we use inboundChannel.eventLoop() when building the Bootstrap this does not need to be volatile as // the outboundChannel will use the same EventLoop (and therefore Thread) as the inboundChannel." />
      <item value="// was able to flush out data, start to read the next chunk" />
      <item value="complete" />
      <item value="connection complete start to read first data" />
      <item value="Hex Dump Proxy Frontend Handler" />
    </histories>
  </component>
  <component name="Settings">
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="5c565298cc6d41a2" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>