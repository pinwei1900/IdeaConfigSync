<application>
  <component name="AppStorage">
    <option name="maxHistorySize" value="30" />
    <histories>
      <item value="fully Populated Subject" />
      <item value="* Processes a method invocation on a proxy instance and returns * the result. This method will be invoked on an invocation handler * when a method is invoked on a proxy instance that it is * associated with." />
      <item value="Invocation Handler" />
      <item value="Logging proxies that logs any JDBC statement." />
      <item value="Base class for proxies to do logging" />
      <item value="Jakarta Commons Logging Impl" />
      <item value="Druid DataSource" />
      <item value="Druid" />
      <item value="Mapped Statements collection does not contain value for com.xuanwu.iot.mapper.IotAccountMapMapper.getById" />
      <item value="filterOrder() must also be defined for a filter. Filters may have the same filterOrder if precedence is not important for a filter. filterOrders do not need to be sequential." />
      <item value="pre-routing filtering" />
      <item value="post-routing filters" />
      <item value="Subclasses can override this for custom initialization behavior. Gets called by setApplicationContext after setting the context instance." />
      <item value="Convenient superclass for application objects that want to be aware of the application context, e.g. for custom lookup of collaborating beans or for context-specific resource access. It saves the application context reference and provides an initialization callback method. Furthermore, it offers numerous convenience methods for message lookup." />
      <item value="Validate Configuration" />
      <item value="内存紧张可以改用spring提供的Concurrent Reference Hash Map" />
      <item value="global Thread Map" />
      <item value="file Handling Task" />
      <item value="wait For Delete Concurrent Linked Queue" />
      <item value=". If queue apparently contains waiting items, and this * call is of complementary mode, try to fulfill by CAS'ing * item field of waiting node and dequeuing it, and then * returning matching item. *" />
      <item value="If queue apparently empty or holding same-mode nodes, * try to add node to queue of waiters, wait to be * fulfilled (or cancelled) and return matching item." />
      <item value="is Custom File Properties" />
      <item value="Cache implementation on top of Redis." />
      <item value="the main mechanics of invokeAny." />
      <item value="* Returns {@code true} if all tasks have completed following shut down. * Note that {@code isTerminated} is never {@code true} unless * either {@code shutdown} or {@code shutdownNow} was called first." />
      <item value="Attempts to stop all actively executing tasks, halts the * processing of waiting tasks, and returns a list of the tasks * that were awaiting execution." />
      <item value="Invocation has no additional effect if already shut down." />
      <item value="candidates" />
      <item value="get Associate Account" />
      <item value="Count Package Order" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="140" />
        <entry key="ENGLISH" value="141" />
        <entry key="ALBANIAN" value="1" />
        <entry key="DANISH" value="2" />
        <entry key="LUXEMBOURGISH" value="2" />
        <entry key="SUNDANESE" value="3" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="5c565298cc6d41a2" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>