<application>
  <component name="AppStorage">
    <option name="maxHistorySize" value="30" />
    <histories>
      <item value="- Any keys that need to be passed to the script" />
      <item value="Any keys that need to be passed to the script" />
      <item value="Set the the respective keys to the respective values. MSET will replace old values with new values, while MSETNX will not perform any operation at all even if just a single key already exists." />
      <item value="Forward channel total statistics list page failed" />
      <item value="I Data Convert For Export" />
      <item value="Event raised when an {@code ApplicationContext} gets initialized or refreshed." />
      <item value="If an annotated method supports a single event type, the method may declare a single parameter that reflects the event type to listen to. If an annotated method supports multiple event types, this annotation may refer to one or more supported event types using the classes attribute. See the classes() javadoc for further details." />
      <item value="SYS BIND" />
      <item value="get Announcement List" />
      <item value="Task Envelope" />
      <item value="un Load Task I Ds" />
      <item value="convert Import Task Info" />
      <item value="IMPORT" />
      <item value="EXPORT" />
      <item value="receive User Id" />
      <item value="user Notice Pre Version Map" />
      <item value="user Notice Cur Version Map" />
      <item value="find Result Count By User Id" />
      <item value="the // executeEpollInReadyRunnable could read nothing, and if the user doesn't explicitly call read they will // never get data after this." />
      <item value="We must set the read flag here as it is possible the user didn't read in the last read loop," />
      <item value="/ Only fire a channelActive if the channel has never been registered. This prevents firing // multiple channel actives if the channel is deregistered and re-registered." />
      <item value="/ This must happen outside of the synchronized(...) block as otherwise handlerAdded(...) may be called while // holding the lock and so produce a deadlock if handlerAdded(...) will try to add another handler from outside // the EventLoop." />
      <item value="// Ensure we call handlerAdded(...) before we actually notify the promise. This is needed as the // user may already fire events through the pipeline in the ChannelFutureListener." />
      <item value="check if the channel is still open as it could be closed in the mean time when the register // call was outside of the eventLoop" />
      <item value="Its ordered if its driven by the EventLoop or the given Executor is an instanceof OrderedEventExecutor." />
      <item value="Lazily instantiated tasks used to trigger events to a handler with different executor. // There is no need to make this volatile as at worse it will just create a few more instances then needed." />
      <item value="REMOVE COMPLETE" />
      <item value="ADD COMPLETE" />
      <item value="PENDING" />
      <item value="ADD PENDING" />
    </histories>
  </component>
  <component name="Settings">
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="5c565298cc6d41a2" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>