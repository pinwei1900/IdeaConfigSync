<application>
  <component name="AppStorage">
    <option name="maxHistorySize" value="30" />
    <histories>
      <item value="validateMapping err" />
      <item value="validate Mapping" />
      <item value="if any thread interrupted the current thread before or while the current thread was waiting for a notification. The interrupted status of the current thread is cleared when this exception is thrown." />
      <item value="Channel Duplex Handler" />
      <item value="jianghang" />
      <item value="tradition" />
      <item value="Convenient superclass for application objects that want to be aware of the application context, e.g. for custom lookup of collaborating beans or for context-specific resource access. It saves the application context reference and provides an initialization callback method. Furthermore, it offers numerous convenience methods for message lookup.&#10;There is no requirement to subclass this class: It just makes things a little easier if you need access to the context, e.g. for access to file resources or to the message source. Note that many application objects do not need to be aware of the application context at all, as they can receive collaborating beans via bean references." />
      <item value="Load previously stored messages." />
      <item value="The trust certificate changed, reload the ssl context" />
      <item value="Producer" />
      <item value="MQ Producer Inner" />
      <item value="Default MQ Producer Impl" />
      <item value="broker" />
      <item value="try restarting transaction" />
      <item value="sync" />
      <item value="--------------------" />
      <item value="Like {@link #readRawVarint32(InputStream)}, but expects that the caller has already read one * byte. This allows the caller to determine if EOF has been reached before attempting to read." />
      <item value="that an embedded message misreported its own length." />
      <item value="Schedules the specified task for repeated fixed-rate execution, beginning after the specified delay. Subsequent executions take place at approximately regular intervals, separated by the specified period." />
      <item value="Internal class to manage all Timers using one thread. * TimerQueue manages a queue of Timers. The Timers are chained * together in a linked list sorted by the order in which they will expire." />
      <item value="previous" />
      <item value="Ronbin Record" />
      <item value="Attempts to compute a mapping for the specified key and its current mapped value (or null if there is no current mapping). The entire method invocation is performed atomically." />
      <item value="Attempts to compute a mapping for the specified key and its current mapped value (or null if there is no current mapping)." />
      <item value="Attempts to compute a mapping for the specified key and its current mapped value (or null if there is no current mapping). The entire method invocation is performed atomically. Some attempted update operations on this map by other threads may be blocked while computation is in progress, so the computation should be short and simple, and must not attempt to update any other" />
      <item value="write Delimited To" />
      <item value="Guaranteed to throw an exception and leave the map unmodified." />
      <item value="This class shows how to use the full extent of Spring Shell without relying on Boot auto configuration." />
      <item value="Actuator Endpoints" />
      <item value="Example CommandLineRunner that shows how overall shell behavior can be customized. In * this particular example, any program (process) arguments are assumed to be shell * commands that need to be executed (and the shell then quits)." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="208" />
        <entry key="ENGLISH" value="209" />
        <entry key="ALBANIAN" value="1" />
        <entry key="DANISH" value="2" />
        <entry key="LUXEMBOURGISH" value="2" />
        <entry key="SUNDANESE" value="3" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="5c565298cc6d41a2" />
      </youdao-translate>
    </option>
  </component>
</application>